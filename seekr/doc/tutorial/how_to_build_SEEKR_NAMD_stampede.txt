How to build the proper NAMD build for SEEKR on the Stampede supercomputer

NOTE: If you are trying to build NAMD locally, you probably only need to follow the normal compile instructions for NAMD in notes.txt, but be sure to include the modified code in the src/ directory.

1. Download the NAMD source code. I'm using NAMD2.10 from the nightly build on Nov 2, 2015.

http://www.ks.uiuc.edu/Development/Download/download.cgi?PackageName=NAMD

2. Compile Charm++ and NAMD

The following steps were modified from the notes.txt file in the NAMD source directory

Unpack NAMD and matching Charm++ source code:
  tar xzf NAMD_2.10_Source.tar.gz
  cd NAMD_2.10_Source
  tar xf charm-6.7.0-pre.tar
  
  MAKE SURE YOU PUT MY SOURCE CODE FILES INTO THE SRC/ DIRECTORY

GOT this script from JIM

replace my work directory with your work directory:

uname -a
module load fftw3
echo $PATH
cat STDERR_REDIRECT_WORKING > /dev/null
echo /work/00288/tg455591/charm-6.7.0-build-2015-Nov-08-17541-verbs-linux-x86_64-iccstatic
mkdir /work/00288/tg455591/charm-6.7.0-build-2015-Nov-08-17541-verbs-linux-x86_64-iccstatic
cd /work/00288/tg455591/charm-6.7.0-build-2015-Nov-08-17541-verbs-linux-x86_64-iccstatic
wget --no-verbose http://www.ks.uiuc.edu/~jim/build/charm-6.7.0.tar
tar xmf /work/00288/tg455591/charm-6.7.0-build-2015-Nov-08-17541-verbs-linux-x86_64-iccstatic/charm-6.7.0.tar
/bin/rm -f /work/00288/tg455591/charm-6.7.0-build-2015-Nov-08-17541-verbs-linux-x86_64-iccstatic/charm-6.7.0.tar
cd /work/00288/tg455591/charm-6.7.0-build-2015-Nov-08-17541-verbs-linux-x86_64-iccstatic/charm-6.7.0
touch src/util/pup_f.f90

./build charm++ verbs-linux-x86_64 iccstatic --no-build-shared --with-production 
cd verbs-linux-x86_64-iccstatic/tests/charm++/megatest
make pgm
ldd pgm
mv pgm ../../../bin/megatest
cd ../../converse/megacon
make pgm
ldd pgm
mv pgm ../../../bin/megacon
cd ../../..
/bin/rm -rf ~/charm-6.7.0/verbs-linux-x86_64-iccstatic
mkdir ~/charm-6.7.0
chmod a+rX ~/charm-6.7.0
mkdir ~/charm-6.7.0/verbs-linux-x86_64-iccstatic
cp -rL bin include ~/charm-6.7.0/verbs-linux-x86_64-iccstatic
cd lib
mkdir ~/charm-6.7.0/verbs-linux-x86_64-iccstatic/lib
mv lib*modulemsa.a lib*moduleNeighborLB.a lib*moduleHybridLB.a lib*moduleRefineLB.a lib*moduleGreedyLB.a lib*moduleCkMulticast.a lib*moduleCkIO.a lib*moduleCkLoop.a lib*ck.a lib*ckmain.a lib*conv-cplus-y.a lib*conv-core.a lib*conv-util.a lib*conv-partition.a lib*conv-ldb.a cray_tlbh*.* libmemory-default.* libmemory-os.* libthreads-default.* lib*ckqt.a lib*trace-projections.a lib*trace-summary.a libldb-rand.* ~/charm-6.7.0/verbs-linux-x86_64-iccstatic/lib
mkdir ~/charm-6.7.0/verbs-linux-x86_64-iccstatic/lib_so
cd; /bin/rm -rf /work/00288/tg455591/charm-6.7.0-build-2015-Nov-08-17541-verbs-linux-x86_64-iccstatic
chmod -R a+rX ~/charm-6.7.0/verbs-linux-x86_64-iccstatic
ls -l ~/charm-6.7.0/verbs-linux-x86_64-iccstatic/lib
ls -l ~/charm-6.7.0/verbs-linux-x86_64-iccstatic/bin/charmrun ~/charm-6.7.0/verbs-linux-x86_64-iccstatic/bin/megatest
cat STDERR_REDIRECT_WORKING > /dev/null
echo Done building via scp.


Now the following information came from the notes.txt file in the NAMD directory. Modified slightly for our purposes.

Download and install TCL and FFTW libraries:
  (cd to NAMD_2.10_Source if you're not already there)
  wget http://www.ks.uiuc.edu/Research/namd/libraries/fftw-linux-x86_64.tar.gz
  tar xzf fftw-linux-x86_64.tar.gz
  mv linux-x86_64 fftw
  wget http://www.ks.uiuc.edu/Research/namd/libraries/tcl8.5.9-linux-x86_64.tar.gz
  wget http://www.ks.uiuc.edu/Research/namd/libraries/tcl8.5.9-linux-x86_64-threaded.tar.gz
  tar xzf tcl8.5.9-linux-x86_64.tar.gz
  tar xzf tcl8.5.9-linux-x86_64-threaded.tar.gz
  mv tcl8.5.9-linux-x86_64 tcl
  mv tcl8.5.9-linux-x86_64-threaded tcl-threaded

Optionally edit various configuration files:
  (not needed if charm-6.7.0-pre, fftw, and tcl are in NAMD_2.10_Source)
  vi Make.charm  (set CHARMBASE to full path to charm) # SET THIS TO THE DIRECTORY: ${HOME}/charm-6.7.0
  vi arch/Linux-x86_64.fftw     (fix library name and path to files)
  vi arch/Linux-x86_64.tcl      (fix library version and path to TCL files)

Set up build directory and compile:
  ./config Linux-x86_64-g++ --charm-arch verbs-linux-x86_64-iccstatic
  cd Linux-x86_64-g++
  make   (or gmake -j4, which should run faster)

Optional: Quick tests using one and two processes (network version):
  (this is a 66-atom simulation so don't expect any speedup)
  ./namd2
  ./namd2 src/alanin
  ./charmrun ++local +p2 ./namd2
  ./charmrun ++local +p2 ./namd2 src/alanin
  (for MPI version, run namd2 binary as any other MPI executable)

Optional: Longer test using four processes:
  wget http://www.ks.uiuc.edu/Research/namd/utilities/apoa1.tar.gz
  tar xzf apoa1.tar.gz
  ./charmrun ++local +p4 ./namd2 apoa1/apoa1.namd
  (FFT optimization will take a several seconds during the first run.)


Make sure you include: 
replicaUniformPatchGrids on
in the NAMD input file script

Use the following command to run locally:
/home/lvotapka/Downloads/NAMD_CVS-2015-11-02_Source/Linux-x86_64-g++/charmrun ++local +p1 /home/lvotapka/Downloads/NAMD_CVS-2015-11-02_Source/Linux-x86_64-g++/namd2 +replicas 1 --fftwestimate yes fwd_rev1.namd +stdout stdout.%d

Or this one for simple tests:
/home1/01624/lvotapka/NAMD_CVS-2015-11-02_Source/Linux-x86_64-g++/charmrun +p16 /home1/01624/lvotapka/NAMD_CVS-2015-11-02_Source/Linux-x86_64-g++/namd2 +replicas 1 --fftwestimate yes fwd_rev1.namd

